class NamedRouting{static addNamedItem(name,item){if(item===void 0){item=name;name=""}if(!name){name=item.getName()}if(name){if(NamedRouting.registry[name]){throw`Error adding named item ${name}, item with that name already registered`}NamedRouting.registry[name]=item;let assignment=NamedRouting.getAssignment(name);if(assignment){item.processNamedUrl(assignment.url)}}}static removeNamedItem(name){if(NamedRouting.registry[name]){delete NamedRouting.registry[name]}}static getNamedItem(name){return NamedRouting.registry[name]}static consumeAssignement(name){let assignment=NamedRouting.getAssignment(name);if(assignment){NamedRouting.removeAssignment(name)}return assignment}static getAssignment(name){return NamedRouting.assignments[name]}static addAssignment(name,url){NamedRouting.assignments[name]={name,url};let namedItem=NamedRouting.getNamedItem(name);if(namedItem){namedItem.processNamedUrl(url)}}static removeAssignment(name){if(NamedRouting.assignments[name]){delete NamedRouting.assignments[name];return!0}return!1}static generateNamedItemsUrl(){let url="",assignments=NamedRouting.assignments;for(let itemName in assignments){if(url.length){url+="::"}url+=NamedRouting.generateUrlFragment(assignments[itemName])}return url}static generateUrlFragment(assignment){return`(${assignment.name}:${assignment.url.replace(/\./g,"_dot_")})`}static parseNamedItem(url,supressAdding){if("/"===url[0]){url=url.substr(1)}if("("===url[0]){url=url.substr(1,url.length-2)}let match=url.match(/^\/?\(?([\w_-]+)\:(.*)\)?/);if(match){let urlEscaped=match[2].replace(/_dot_/g,".");if(!0!==supressAdding){NamedRouting.addAssignment(match[1],urlEscaped)}return{name:match[1],url:match[2],urlEscaped:urlEscaped}}return null}}NamedRouting.registry={};NamedRouting.assignments={};var namedRouting={NamedRouting:NamedRouting};class RouterElement extends HTMLElement{static handlerAddRouter(event){RouterElement.addRouter.call(this,event.detail.router);event.stopPropagation();event.detail.parentRouter=this}static addRouter(router){this._routers.push(router)}static removeRouter(routerElement){var routerIndex=this._routers.indexOf(routerElement);if(-1<routerIndex){this._routers.splice(routerIndex,1)}}static changeHash(){let hash=RouterElement._getHash();RouterElement.dispatch(_changeHash(hash))}static changeUrl(){let hash=RouterElement._getHash(),path=window.decodeURIComponent(window.location.pathname),query=window.location.search.substring(1),oldRoute=RouterElement._route;if(!RouterElement._initialized){return!1}if(oldRoute.path===path&&oldRoute.query===query&&oldRoute.hash===hash){return!1}var newUrl=RouterElement._getUrl(window.location);RouterElement.dispatch(newUrl)}static navigate(navigationSource){let event=null,anchor=null;if(navigationSource instanceof Event){event=navigationSource;if(event.defaultPrevented){return}}else if("string"!==typeof navigationSource){anchor=navigationSource}var href=RouterElement._getSameOriginLinkHref(navigationSource);if(!href){let target=event&&event.target||anchor;if(target){target.dispatchEvent(new CustomEvent("onRouteNotHandled",{bubbles:!0,composed:!0,detail:{href}}))}return}event&&event.preventDefault();if(href===window.location.href){return}let url=new URL(href);var newUrl=RouterElement._getUrl(url);RouterElement.dispatch(newUrl)}static dispatch(url){let basePath=RouterElement.baseUrlSansHost(),shortUrl=url.substr(basePath.length);RouterElement._route={url:shortUrl};if(RouterElement._activeRouters.length&&!1===RouterElement._activeRouters.every(r=>r.route.canLeave(RouterElement._route))){RouterElement._activeRouters[0].router.dispatchEvent(new CustomEvent("onRouteCancelled",{bubbles:!0,composed:!0,detail:{shortUrl}}));return}RouterElement._activeRouters=[];RouterElement.performMatchOnRouters(shortUrl,RouterElement._routers);RouterElement.updateHistory(url)}static updateHistory(href){let urlState=RouterElement.getUrlState(),url=urlState;if(2===url.length){url=href}else{url=document.baseURI+url}let fullNewUrl=new URL(url,window.location.protocol+"//"+window.location.host).href,oldRoute=RouterElement._route,now=window.performance.now(),shouldReplace=oldRoute._lastChangedAt+RouterElement._dwellTime>now;oldRoute._lastChangedAt=now;if(shouldReplace){window.history.replaceState({},"",fullNewUrl)}else{window.history.pushState({},"",fullNewUrl)}RouterElement.updateAnchorsStatus(urlState)}static updateAnchorsStatus(url){url=url||RouterElement.getUrlState();let currentAnchors=RouterElement._anchors,nextAnchors=[];for(let i=0,iLen=currentAnchors.length;i<iLen;i++){if(!0===currentAnchors[i].a.isConnected){let link=currentAnchors[i];nextAnchors[nextAnchors.length]=link;link.a.classList.remove(link.a.activeClassName||"active")}}let urlFragments=url.split("::");nextUrlFragment:for(let j=0,jLen=urlFragments.length;j<jLen;j++){let urlFragment=urlFragments[j],urlFragNamedItemMatch=NamedRouting.parseNamedItem(urlFragment,!0);nextLink:for(let i=0,iLen=nextAnchors.length,link;i<iLen;i++){link=nextAnchors[i];if(link&&link.a.classList.contains(link.a.activeClassName||"active")){continue nextLink}if(link){if(link.routerMatches){let named=link.routerMatches.named,routes=link.routerMatches.routes;if(urlFragNamedItemMatch){for(let k=0,kLen=named.length;k<kLen;k++){if(named[k].name==urlFragNamedItemMatch.name){if(named[k].url==urlFragNamedItemMatch.urlEscaped){link.a.classList.add(link.a.activeClassName||"active");link=null;continue nextLink}else if(0===urlFragNamedItemMatch.urlEscaped.indexOf(named[k].url)){link.a.classList.add(link.a.activeClassName||"active");link=null;continue nextLink}}}}for(let k=0,kLen=routes.length;k<kLen;k++){if(urlFragment==routes[k]){link.a.classList.add(link.a.activeClassName||"active");link=null;continue nextLink}else if(0===routes[k].indexOf(urlFragment)){link.a.classList.add(link.a.activeClassName||"active");link=null;continue nextLink}}}}}}return null}static getUrlState(){let url=NamedRouting.generateNamedItemsUrl();if(RouterElement._routers){for(let i=0,iLen=RouterElement._routers.length;i<iLen;i++){var nextFrag=RouterElement._routers[i].generateUrlFragment();if(nextFrag){if(url.length){url+="::"}url+=nextFrag}}}return url}static performMatchOnRouters(url,routers){if("("===url[0]){url=url.substr(1,url.length-2)}let urls=RouterElement.splitUrlIntoRouters(url),urlsWithoutNamedOutlets=[];for(let i=0,iLen=urls.length;i<iLen;i++){if(!NamedRouting.parseNamedItem(urls[i])){urlsWithoutNamedOutlets.push(urls[i])}}let i=0;for(let iLen=routers.length,router;i<iLen;i++){router=routers[i];if(urlsWithoutNamedOutlets[i]){router.performMatchOnRouter(urlsWithoutNamedOutlets[i]||"")}}}static splitUrlIntoRouters(url){for(var urls=[],skip=0,i=0,lastI=i,iLen=url.length;i<iLen;i++){const char=url[i];if("("===char){skip++}else if(")"===char){skip--}else if(":"===char&&":"===url[i+1]&&0===skip){urls.push(url.substring(lastI+(":"===url[lastI]?1:0),i));i++;lastI=i}}if("("===url[lastI]||")"===url[lastI]||":"===url[lastI]){lastI++}if(i>lastI){urls.push(url.substr(lastI))}for(let j=0,jLen=urls.length;j<jLen;j++){if("/"===urls[j][0]){urls[j]=urls[j].substr(1)}if("("===urls[j][0]&&")"===urls[j][urls[j].length-1]){urls[j]=urls[j].substr(1,urls[j].length-2)}}return urls}static registerLinks(links,activeClassName){let currentAnchors=RouterElement._anchors,nextAnchors=[];for(let i=0,iLen=currentAnchors.length;i<iLen;i++){if(!0===currentAnchors[i].a.isConnected){nextAnchors[nextAnchors.length]=currentAnchors[i]}}for(let i=0,iLen=links.length;i<iLen;i++){if(links[i].href){let matches=RouterElement.sanitizeLinkHref(links[i]);if(matches){nextAnchors[nextAnchors.length]={a:links[i],activeClassName:activeClassName,routerMatches:matches}}}}RouterElement._anchors=nextAnchors;RouterElement.updateAnchorsStatus()}static sanitizeLinkHref(linkElement){let href=RouterElement._getSameOriginLinkHref(linkElement),url=new URL(href),hash=RouterElement._getHash(),path=window.decodeURIComponent(url.pathname),query=url.search.substring(1),basePathLength=RouterElement.baseUrlSansHost().length;url=path.substr(basePathLength);if("("===url[0]){url=url.substr(1,url.length-2)}let urls=RouterElement.splitUrlIntoRouters(url),namedMatches=[],routerMatches=[];for(let i=0,iLen=urls.length,namedMatch;i<iLen;i++){namedMatch=NamedRouting.parseNamedItem(urls[i],!0);if(namedMatch){namedMatches.push(namedMatch)}else{routerMatches.push(urls[i])}}return{named:namedMatches,routes:routerMatches}}disconnectedCallback(){RouterElement.removeRouter.call(this._parentRouter,this);this.removeEventListener("routerAdded",this.addRouter,!1);if(this.getName()){NamedRouting.removeNamedItem(this.getName())}}connectedCallback(){if(!this.created){this.created=!0;let baseURI=document.baseURI;if(baseURI===void 0){let baseTags=document.getElementsByTagName("base");baseURI=baseTags.length?baseTags[0].href:document.URL;document.baseURI=baseURI}this._routers=[];RouterElement.initialize()}if(this.isConnected){var routerAddedEvent=new CustomEvent("onRouterAdded",{bubbles:!0,cancelable:!0,composed:!0,detail:{router:this}});this.dispatchEvent(routerAddedEvent);this._parentRouter=routerAddedEvent.detail.parentRouter;this.addEventListener("onRouterAdded",this.handlerAddRouter=RouterElement.handlerAddRouter.bind(this),!1);NamedRouting.addNamedItem(this)}}constructor(){super()}static initialize(){if(!RouterElement._initialized){RouterElement._initialized=!0;RouterElement._activeRouters=[];RouterElement._anchors=[];RouterElement._route={};RouterElement._routers=[];RouterElement._encodeSpaceAsPlusInQuery=!1;RouterElement._dwellTime=2e3;window.addEventListener("popstate",RouterElement.changeUrl,!1);window.addEventListener("click",RouterElement.navigate,!1);window.addEventListener("onRouterAdded",RouterElement.handlerAddRouter.bind(RouterElement),!1);RouterElement.changeUrl(decodeURIComponent(location.pathname))}}getName(){if(this.routerName===void 0){this.routerName=this.getAttribute("name")}return this.routerName}getCurrentMatch(){if(!this._currentMatch&&this._parentRouter._currentMatch){this._currentMatch={remainder:this._parentRouter._currentMatch.remainder};let remainder=this._currentMatch.remainder;if(remainder&&"("===remainder[0]){remainder=RouterElement.splitUrlIntoRouters(remainder.substring(1,remainder.length-2));this._currentMatch.remainder=remainder.shift()}this._currentMatch.url=this._currentMatch.remainder}return this._currentMatch}addRoute(routeElement){console.log("route added: "+routeElement.getAttribute("path"));if(!this.hasMatch){let currentMatch=this.getCurrentMatch();if(currentMatch){if(currentMatch.remainder){this.performMatchOnRoute(currentMatch.remainder,routeElement)}}else{this.performMatchOnRoute(RouterElement._route.url,routeElement)}}}processNamedUrl(url){return this.performMatchOnRouter(url)}performMatchOnRouter(url){this.hasMatch=!1;this._currentMatch={remainder:url};let routeElements=this._getRouterElements("a-route"),outletElement=this._getRouterElements("a-outlet")[0],match=null;for(let i=0,iLen=routeElements.length,routeElement;i<iLen;i++){routeElement=routeElements[i];match=this.performMatchOnRoute(url,routeElement);if(null!=match){console.log("route matched -> ",routeElement.getAttribute("path"));break}}if(null===match){if(outletElement.renderContent){outletElement.renderContent("No matching route for url "+url+" \r\nTo replace this message add a 404 catch all route\r\n <a-route path='*'><template>catach all - NotFound</template></a-route>");console&&console.error&&console.error("404 - Route not found for url "+url)}return null}return match}performMatchOnRoute(url,routeElement){if(!routeElement.match){return null}let match=routeElement.match(url)||null;if(null!=match){if(match.redirect){return this.performMatchOnRouter(match.redirect)}let activeRouters=RouterElement._activeRouters;activeRouters.push({route:routeElement,router:this,match:match});this._currentMatch=match;if(match.useCache){if(this._routers&&match.remainder){RouterElement.performMatchOnRouters(match.remainder,this._routers)}}else{let outletElement=this._getRouterElements("a-outlet")[0];routeElement.getContent(match.data).then(content=>outletElement.renderContent(content))}this.postProcessMatch()}return match}postProcessMatch(){this.hasMatch=!0;if(this._parentRouter._currentMatch){let parentMatch=this._parentRouter._currentMatch,remainder=parentMatch.remainder;if(remainder&&"("===remainder[0]){remainder=remainder.substring(1,remainder.length-2)}remainder=RouterElement.splitUrlIntoRouters(remainder);remainder.shift();if(1<remainder.length){this._parentRouter._currentMatch.remainder="("+remainder.join("::")+")"}else if(1===remainder.length){this._parentRouter._currentMatch.remainder=remainder[0]}else{this._parentRouter._currentMatch.remainder=""}}}generateUrlFragment(){let match=this._currentMatch;if(!match){return""}let urlFrag=match.url;if(match.remainder){urlFrag+="/"+match.remainder}if(this._routers&&this._routers.length){urlFrag+="/(";for(let i=0,iLen=this._routers.length;i<iLen;i++){if(0<i){urlFrag+="::"}urlFrag+=this._routers[i].generateUrlFragment()}urlFrag+=")"}return urlFrag}_getRouterElements(tagName){let routeElements=[];tagName=tagName.toLowerCase();for(var i=0,iLen=this.children.length;i<iLen;i++){let elem=this.children[i];if(elem.tagName.toLowerCase()===tagName){routeElements.push(elem)}}return routeElements}static _getSameOriginLinkHref(hrefSource){let href=null,anchor=null;if(hrefSource instanceof Event){let event=hrefSource;if(0!==event.button){return null}if(event.metaKey||event.ctrlKey){return null}let eventPath=event.path;for(var i=0;i<eventPath.length;i++){let element=eventPath[i];if("A"===element.tagName&&element.href){anchor=element;break}}}else if("string"===typeof hrefSource){href=hrefSource}else{anchor=hrefSource}if(anchor){if(!anchor){return null}if("_blank"===anchor.target){return null}if(("_top"===anchor.target||"_parent"===anchor.target)&&window.top!==window){return null}if(anchor.download){return null}href=anchor.href}if(0!==href.indexOf(document.baseURI)){return null}let hrefEsacped=href.replace(/::/g,"$_$_"),url;if(null!=document.baseURI){url=new URL(hrefEsacped,document.baseURI)}else{url=new URL(hrefEsacped)}let origin;if(window.location.origin){origin=window.location.origin}else{origin=window.location.protocol+"//"+window.location.host}let urlOrigin;if(url.origin&&"null"!==url.origin){urlOrigin=url.origin}else{let urlHost=url.host,urlPort=url.port,urlProtocol=url.protocol,isExtraneousHTTPS="https:"===urlProtocol&&"443"===urlPort,isExtraneousHTTP="http:"===urlProtocol&&"80"===urlPort;if(isExtraneousHTTPS||isExtraneousHTTP){urlHost=url.hostname}urlOrigin=urlProtocol+"//"+urlHost}if(urlOrigin!==origin){return null}let normalizedHref=url.pathname.replace(/\$_\$_/g,"::")+url.search.replace(/\$_\$_/g,"::")+url.hash.replace(/\$_\$_/g,"::");if("/"!==normalizedHref[0]){normalizedHref="/"+normalizedHref}let urlSpaceRegExp=RouterElement._makeRegExp(RouterElement.whiteListRegEx);if(urlSpaceRegExp&&!urlSpaceRegExp.test(normalizedHref)){return null}let fullNormalizedHref=new URL(normalizedHref,window.location.href).href;return fullNormalizedHref}static _makeRegExp(urlSpaceRegex){return RegExp(urlSpaceRegex)}static _getHash(){return window.decodeURIComponent(window.location.hash.substring(1))}static baseUrlSansHost(){let host=window.location.protocol+"//"+window.location.host;return document.baseURI.substr(host.length+1)}static _getUrl(url){url=url||window.location;let path=window.decodeURIComponent(url.pathname),query=url.search.substring(1),hash=RouterElement._getHash(url),partiallyEncodedPath=window.encodeURI(path).replace(/\#/g,"%23").replace(/\?/g,"%3F"),partiallyEncodedQuery="";if(query){partiallyEncodedQuery="?"+query.replace(/\#/g,"%23");if(RouterElement._encodeSpaceAsPlusInQuery){partiallyEncodedQuery=partiallyEncodedQuery.replace(/\+/g,"%2B").replace(/ /g,"+").replace(/%20/g,"+")}else{partiallyEncodedQuery=partiallyEncodedQuery.replace(/\+/g,"%2B").replace(/ /g,"%20")}}var partiallyEncodedHash="";if(hash){partiallyEncodedHash="#"+window.encodeURI(hash)}return partiallyEncodedPath+partiallyEncodedQuery+partiallyEncodedHash}}RouterElement.assignedOutlets={};window.customElements.define("a-router",RouterElement);var routesRouter={RouterElement:RouterElement};class RouteElement extends HTMLElement{connectedCallback(){if(!this.created){this.created=!0;this.style.display="none";const baseElement=document.head.querySelector("base");this.baseUrl=baseElement&&baseElement.getAttribute("href")}if(this.isConnected){var initMatch=function(){this.parentNode&&this.parentNode.addRoute&&this.parentNode.addRoute(this)};setTimeout(initMatch.bind(this),0);if(this.hasAttribute("lazyload")&&"true"!==this.getAttribute("lazyload").toLowerCase()){let importAttr=this.getAttribute("import"),tagName=this.getAttribute("element");if(importAttr&&customElements.get(tagName)===void 0){import(importAttr)}}}}disconnectedCallback(){this.parentNode&&this.parentNode.isConnected&&this.parentNode.removeRoute(this)}constructor(){super()}_createPathSegments(url){return url.replace(/(^\/+|\/+$)/g,"").split("/")}match(url){const urlSegments=this._createPathSegments(url),path=this.getAttribute("path");if(!path){console.log("route must contain a path");throw"Route has no path defined. Add a path attribute to route"}let match=null;if("*"===path){match={url:url,remainder:"",data:null}}else if(path===url){match={url:url,remainder:"",data:null}}else{const pathSegments=this._createPathSegments(path),data=new Map;let max=Math.max(urlSegments.length,pathSegments.length),ret;for(let i=0;i<max;i++){if(pathSegments[i]&&":"===pathSegments[i].charAt(0)){let param=pathSegments[i].replace(/(^\:|[+*?]+$)/g,""),flags=(pathSegments[i].match(/[+*?]+$/)||[])[0]||"",plus=~flags.indexOf("+"),star=~flags.indexOf("*"),val=urlSegments[i]||"";if(!val&&!star&&(0>flags.indexOf("?")||plus)){match=null;break}data.set(param,decodeURIComponent(val));if(plus||star){data.set(param,urlSegments.slice(i).map(decodeURIComponent).join("/"));match={url:url,remainder:"",data:data};break}}else if(pathSegments[i]!==urlSegments[i]){if(0<i&&!this.hasAttribute("fullmatch")){match={url:urlSegments.slice(0,i).join("/"),remainder:urlSegments.slice(i).join("/"),data:data}}break}if(i===max-1){match={url:url,remainder:"",data:data}}}}if(null!==match){var routeMatchedEvent=new CustomEvent("onRouteMatch",{bubbles:!0,cancelable:!0,composed:!0,detail:{route:this,match:match,path:path}});this.dispatchEvent(routeMatchedEvent);if(routeMatchedEvent.defaultPrevented){match=null}if(this.hasAttribute("redirect")){match.redirect=this.getAttribute("redirect")}}if(match){let useCache=this.lastMatch&&this.lastMatch.url===match.url&&!this.hasAttribute("disableCache");match.useCache=useCache}this.lastMatch=match;return match}async getContent(attributes={}){let content=this.content;if(!content){let importAttr=this.getAttribute("import"),tagName=this.getAttribute("element");await RouteElement.importCustomElement(importAttr,tagName);if(tagName){content=document.createElement(tagName)}let template=this.children[0];if(template&&"TEMPLATE"===template.nodeName){return template.content.cloneNode(!0)}}RouteElement.setData(content,attributes);return this.content=content}static async importCustomElement(importSrc,tagName){if(importSrc&&customElements.get(tagName)===void 0){await import(importSrc)}}static setData(target,data){data.forEach((v,k)=>{if("."===k[0]){target[k.substr(1)]=v}else{target.setAttribute(k,v)}})}canLeave(newRoute){var canLeaveEvent=new CustomEvent("onRouteLeave",{bubbles:!0,cancelable:!0,composed:!0,detail:{route:newRoute}});this.dispatchEvent(canLeaveEvent);return!canLeaveEvent.defaultPrevented}}window.customElements.define("a-route",RouteElement);var routesRoute={RouteElement:RouteElement};class OutletElement extends HTMLElement{connectedCallback(){if(this.isConnected){if(!this.created){this.created=!0;NamedRouting.addNamedItem(this)}RouterElement.initialize()}}disconnectedCallback(){if(this.getName()){NamedRouting.removeNamedItem(this.getName())}}static deserializeDataFromUrl(urlData){let match=urlData.match(/^([\w-]+)(\(.*?\))?(?:\:(.+))?/);if(match){var data=new Map;if(match[3]){for(var keyValues=match[3].split("&"),i=0,iLen=keyValues.length;i<iLen;i++){let keyValue=keyValues[i].split("=");data.set(decodeURIComponent(keyValue[0]),decodeURIComponent(keyValue[1]))}}let elementTag=match[1],importPath=match[2]&&match[2].substr(1,match[2].length-2),options={import:importPath};return{elementTag,data,options}}}constructor(){super()}getName(){if(this.outletName===void 0){this.outletName=this.getAttribute("name")}return this.outletName}_createPathSegments(url){return url.replace(/(^\/+|\/+$)/g,"").split("/")}renderContent(content){this.innerHTML="";console.log("outlet rendered: "+this.outletName,content);if("string"===typeof content||content instanceof String){this.innerHTML=content}else{this.appendChild(content)}this.dispatchEvent(new CustomEvent("onOutletUpdated",{bubbles:!0,composed:!0,detail:{}}))}async processNamedUrl(url,supressUrlGeneration){let details=OutletElement.deserializeDataFromUrl(url),options=details.options||{},data=details.data||new Map;if(!1===data instanceof Map){data=new Map(Object.entries(data||{}))}if(this.children&&this.children[0]&&this.children[0].tagName.toLowerCase()==details.elementTag){RouteElement.setData(this.children[0],data||{});return this.children[0]}await RouteElement.importCustomElement(options.import,details.elementTag);let element=document.createElement(details.elementTag);RouteElement.setData(element,data||{});this.renderContent(element);if(!supressUrlGeneration){RouterElement.updateHistory("")}return element}}window.customElements.define("a-outlet",OutletElement);export{namedRouting as $namedRouting,routesRoute as $routesRoute,routesRouter as $routesRouter,NamedRouting,RouteElement,RouterElement};